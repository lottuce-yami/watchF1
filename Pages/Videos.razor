@page "/Videos"
@using F1Project.Data.Database.Services
@using F1Project.Data.Database.Types
@inject VideoService VideoServ

<PageTitle>Записи - watchF1</PageTitle>

<main>
    <FilterForm Properties="Properties"/>
    <section class="video-list">
        <VideoList List="VideoList" />
    </section>
</main>

@code
{
    private List<Video> VideoList { get; set; } = new();

    private Dictionary<string, object[]> Properties { get; set; } = new();

    private string[] OrderedProperties { get; } = {"Championship", "Season"};
    
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Championship { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Season { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public string? GrandPrix { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Type { get; set; }

    private void UpdateVideos()
    {
        var filters = GetType().GetProperties().
            Where(p => p.GetValue(this) != null).
            ToDictionary(p => p.Name, p => p.GetValue(this));
        
        VideoList = VideoServ.GetByMany(filters);
        VideoList.Reverse();
    }
    
    protected override void OnParametersSet()
    {
        Properties = GetType().GetProperties().ToDictionary(
            p => p.Name, 
            p => VideoServ.GetUniqueBy(p.Name, OrderedProperties.Contains(p.Name)).ToArray()
                );
        UpdateVideos();
    }
}
