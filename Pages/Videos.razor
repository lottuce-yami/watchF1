@page "/Videos"
@using F1Project.Data.Database.Services
@using F1Project.Data.Database.Types
@inject VideoService VideoServ

<PageTitle>watchF1 - Видео</PageTitle>

<main>
    <section class="filters">
        <label for="championship">
            Чемпионат:
            <select name="championship" id="championship">
                @foreach (var option in VideoList.DistinctBy(video => video.Championship))
                {
                    <option value="@option">@option</option>
                }
            </select>
        </label>
        <label for="season">
            Сезон:
            <select name="season" id="season">
                @foreach (var option in VideoList.DistinctBy(video => video.Season))
                {
                    <option value="@option">@option</option>
                }
            </select>
        </label>
        <label for="grandPrix">
            Гран-при:
            <select name="grandPrix" id="grandPrix">
                @foreach (var option in VideoList.DistinctBy(video => video.GrandPrix))
                {
                    <option value="@option">@option</option>
                }
            </select>
        </label>
        <label for="type">
            Тип:
            <select name="type" id="type">
                @foreach (var option in VideoList.DistinctBy(video => video.Type))
                {
                    <option value="@option">@option</option>
                }
            </select>
        </label>
    </section>
    <section class="video-list">
        <VideoList List="@VideoList"/>
    </section>
</main>

@code
{
    private List<Video> VideoList { get; set; } = null!;
    
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Championship { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Season { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public string? GrandPrix { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Type { get; set; }

    private void UpdateVideos()
    {
        VideoList = VideoServ.Get();
        VideoList.Reverse();
    }
    
    private void Filter()
    {
        var filterOptions = GetType().GetProperties().TakeWhile(property => property.GetValue(this) != null);
        
    }
    
    protected override void OnParametersSet()
    {
        UpdateVideos();
        
    }
}
