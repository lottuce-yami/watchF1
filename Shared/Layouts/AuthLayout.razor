@using F1Project.Data
@using F1Project.Models
@inherits LayoutComponentBase
@layout MainLayout
@inject WatchF1Context DbContext
@inject ProtectedLocalStorage LocalStorage

@if (IsConnected)
{
    if (IsAuthorized)
    {
        <CascadingValue Value="User" Name="User">
            @Body
        </CascadingValue>
    }
    else
    {
        <div class="auth-request">
            <h2>
                Авторизуйтесь, чтобы получить доступ к этой странице.
            </h2>
            <a href="login" role="button">
                <i class="fa-brands fa-telegram"></i>
                Войти через Telegram
                <i class="fa-solid fa-arrow-right-long"></i>
            </a>
        </div>
    }
}
else
{
    <div class="loading">
        <svg class="spinner" viewBox="0 0 50 50">
          <circle class="path" cx="25" cy="25" r="20" fill="none" stroke-width="5"></circle>
        </svg>
    </div>
}

@code {
    private bool IsConnected { get; set; }
    private bool IsAuthorized { get; set; }
    private User? User { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsConnected = true;
            await LoadAuthAsync();
            StateHasChanged();
        }
    }

    private async Task LoadAuthAsync()
    {
        var authValue = await LocalStorage.GetAsync<long?>("tgAuth");
        if (authValue.Success)
        {
            User = await DbContext.Users.FindAsync(authValue.Value);
            if (User != null)
                IsAuthorized = true;
        }
    }
}