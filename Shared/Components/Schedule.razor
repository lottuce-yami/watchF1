@using F1Project.Data.Database.Services
@using System.Text.Json.Serialization
@using System.Text.Json
@inject SettingService Settings
@inject IJSRuntime Js

<article @ref="_schedule" class="schedule">
    <h2>@(ScheduleObject.Flag) @(ScheduleObject.Title)</h2>
    <ol>
        @foreach (var day in ScheduleObject.Days)
        {
            <li class="day">
                <b>📆 @(day.Name):</b>
                <ol>
                    @foreach (var e in day.Events)
                    {
                        <li>
                            @e
                        </li>
                    }
                </ol>
            </li>
        }
    </ol>
</article>

@code
{
    private ElementReference _schedule;
    private ScheduleModel ScheduleObject { get; set; } = null!;

    public class ScheduleModel
    {
        public class Day
        {
            [JsonPropertyName("name")]
            public string? Name { get; set; }

            [JsonPropertyName("events")]
            public string[] Events { get; set; } = {};
        }
        
        [JsonPropertyName("flag")]
        public string? Flag { get; set; }
        
        [JsonPropertyName("title")]
        public string? Title { get; set; }

        [JsonPropertyName("days")]
        public Day[] Days { get; set; } = {};
    }

    protected override void OnInitialized()
    {
        try
        {
            ScheduleObject = 
                JsonSerializer.Deserialize<ScheduleModel>(Settings.Get("schedule").Value ?? "{}")
                ?? 
                new ScheduleModel();
        }
        catch (JsonException)
        {
            ScheduleObject = new ScheduleModel();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Js.InvokeVoidAsync("parseEmoji", _schedule);
    }
}
