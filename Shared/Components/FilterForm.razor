@using F1Project.Data.Database.Services
@using System.Runtime.InteropServices
@inject NavigationManager Nav

<section class="filters">
    <div role="form">
        @foreach (var property in Properties.Keys)
        {
            <select @bind="@Filter[property]">
                <option value="" selected>
                    @Lang[property]
                </option>
                @foreach (var option in Properties[property])
                {
                    <option value="@option">
                        @option
                    </option>
                }
            </select>
        }
        <div>
            <input type="reset" value="Сбросить" @onclick="Reset">
            <input type="submit" value="Применить" @onclick="ToQuery">
        </div>
    </div>
</section>

@code
{
    [Parameter]
    public Dictionary<string, object[]> Properties { get; set; } = null!;

    [Parameter]
    public Dictionary<string, string?> Filter { get; set; } = new();

    private Dictionary<string, string> Lang => new()
    {
        {"Championship", "Чемпионат"},
        {"Season", "Сезон"},
        {"GrandPrix", "Гран При"},
        {"Type", "Тип"}
    };

    private void ToQuery()
    {
        Nav.NavigateTo(Nav.GetUriWithQueryParameters(
            Filter.ToDictionary(
                kvp => kvp.Key, 
                kvp => string.IsNullOrWhiteSpace(kvp.Value) ? null : (object?) kvp.Value)
            ));
    }

    private void Reset()
    {
        foreach (var key in Filter.Keys)
        {
            Filter[key] = null;
        }
        Nav.NavigateTo(Nav.Uri.Split('?')[0]);
    }

    protected override void OnParametersSet()
    {
        foreach (var property in Properties.Keys.Where(property => !Filter.ContainsKey(property)))
        {
            Filter.Add(property, null);
        }
    }
}