@using System.Runtime.InteropServices
@inject NavigationManager Nav

<section class="filters" data-nosnippet>
    <div role="form">
        @foreach (var property in Options.Keys)
        {
            <select @bind="@Filter[property]">
                <option value="" selected>
                    @_lang[property]
                </option>
                @foreach (var option in Options[property])
                {
                    <option value="@option">
                        @option
                    </option>
                }
            </select>
        }
        <div>
            <input type="reset" value="Сбросить" @onclick="Reset">
            <input type="submit" value="Применить" @onclick="ToQuery">
        </div>
    </div>
</section>

@code
{
    [Parameter]
    public Dictionary<string, string?[]> Options { get; set; } = null!;

    [Parameter]
    public Dictionary<string, string?> Filter { get; set; } = new();

    private readonly Dictionary<string, string> _lang = new()
    {
        {"championship", "Чемпионат"},
        {"season", "Сезон"},
        {"grand_prix", "Гран При"},
        {"type", "Тип"}
    };

    private void ToQuery()
    {
        var parameters = Filter.ToDictionary(
            kvp => kvp.Key,
            kvp => string.IsNullOrWhiteSpace(kvp.Value) ? null : (object?) kvp.Value);
        parameters.Add("page", null);
        Nav.NavigateTo(Nav.GetUriWithQueryParameters(parameters));
    }

    private void Reset()
    {
        foreach (var key in Filter.Keys)
        {
            Filter[key] = null;
        }
        Nav.NavigateTo(Nav.Uri.Split('?')[0]);
    }

    protected override void OnParametersSet()
    {
        foreach (var option in Options.Keys.Where(property => !Filter.ContainsKey(property)))
        {
            Filter.Add(option, null);
        }
    }
}